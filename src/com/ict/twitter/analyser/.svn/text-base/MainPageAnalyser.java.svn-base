package com.ict.twitter.analyser;



import org.apache.http.impl.client.DefaultHttpClient;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.ict.twitter.ClientManager;
import com.ict.twitter.WebOperation;
import com.ict.twitter.analyser.beans.Influence;

public class MainPageAnalyser extends Analyser {

	public Influence userInflu;
	
	public MainPageAnalyser() {
		// TODO Auto-generated constructor stub
		super();
	}

	@Override
	public void doAnalyse() {
		if(this.doc==null){
			System.out.println("doc尚未初始化");
			return;
		}else{
			System.out.println("影响力分析开始");
		}		
		try{
		AnalyseUserInfo();
	
		}catch(NullPointerException e){
			System.out.println("获取用户影响力错误");
		}
	}
	
	public static void main(String[] args){
		ClientManager cm = new ClientManager();
		DefaultHttpClient httpclient = cm.getClient();
		WebOperation.setLogFile("ManpageTmp.txt");
		String tInfluResult=WebOperation.openLink(httpclient,"/MagicJohnson");
		//System.out.println("子循环Folloing用户为:"+urlStr);
		MainPageAnalyser mp=new MainPageAnalyser();

		mp.InitiallizeFromString(tInfluResult);
		mp.doAnalyse();
		System.out.println(mp.userInflu.following);
		System.out.println(mp.userInflu.followers);
	}

	
	
	public void AnalyseUserInfo() throws NullPointerException{
		
		
		userInflu=new Influence();
		
		int[] followingAndFollower=new int[2];
		try{
			Element t=doc.getElementsByClass("timeline-following").first();
			if(t==null){
				System.err.println("timeline-following is Missing");
				return;
			}
			Element ele1=t.getElementsByTag("a").first();
			Element ele2=t.getElementsByTag("a").first().nextElementSibling();
			String res1=ele1.text();
			String res2=ele2.text();
			if(res1.indexOf(":")==-1){
				followingAndFollower[0]=Integer.parseInt("0");				
			}else{
				res1=res1.substring(res1.indexOf(":")+1,res1.length());
				if(res2.indexOf(',')!=0){
					String[] withdot=res2.split(",");
					res2="";
					for(String each:withdot){
						res2=res2+each;
					}
				}
				try{
					followingAndFollower[0]=Integer.parseInt(res1);
				}catch(Exception e){
					followingAndFollower[0]=0;					
				}
			}
			if(res2.indexOf(":")==-1){
				followingAndFollower[1]=Integer.parseInt("0");				
			}else{
				res2=res2.substring(res2.indexOf(":")+1,res2.length());
				if(res2.indexOf(',')!=0){
					String[] withdot=res2.split(",");
					res2="";
					for(String each:withdot){
						res2=res2+each;
					}
				}
				try{
					followingAndFollower[1]=Integer.parseInt(res2);
				}catch(Exception e){
					followingAndFollower[1]=0;					
				}
			}
		
			userInflu.setFollowing(followingAndFollower[0]);
			userInflu.setFollowers(followingAndFollower[1]);
		}catch(Exception e){
			e.printStackTrace();
			System.err.println("注意，获取影响力失败");
			return;
		}
	}
	
	public Influence GetUserWithInfluence()
	{
		return userInflu;
	}

}
